name: CI

on: [ push ]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.6, 3.7, 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
      - name: Run tests
        run: |
          python -m unittest discover tests
  versioning:
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Determine version tag
        id: versioning
        uses: codacy/git-version@2.4.0
        with:
          release-branch: main
          dev-branch: development
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install twine
      - name: Build
        env:
          PACKAGE_VERSION: ${{ steps.versioning.outputs.version }}
        run: |
          python setup.py sdist bdist_wheel
      - name: Create GitHub release
        id: github-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          release_name: Release ${{ steps.versioning.outputs.version }}
          prerelease: ${{ github.ref == 'refs/heads/master' && 'false' || 'true' }}